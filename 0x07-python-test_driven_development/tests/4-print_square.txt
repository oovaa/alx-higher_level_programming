>>> print_square = __import__("4-print_square").print_square
>>> print_square(4)
####
####
####
####
>>> print_square()  # Testing without any argument
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() missing 1 required positional argument: 'size'
>>> print_square("14")  # Testing with string
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: size must be an integer
>>> print_square(0)  # Testing with zero
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: size must be > 0
>>> print_square(-12)  # Testing with negative integer
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: size must be > 0
>>> print_square(-1.2)  # Testing with negative float
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: size must be > 0
>>> print_square(1.2)  # Testing with non-integer float
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'float' object cannot be interpreted as an integer
